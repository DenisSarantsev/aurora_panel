// ------------------------------------------------------------------------ –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
const getCheckedKinds = () => {
	const allKindsCheckboxes = document.querySelectorAll(".kinds-app__checkbox-input");
	// –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ (–æ—Ç–º–µ—á–µ–Ω–Ω—ã–µ) –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
	let actualKind = [];
	for ( let checkbox of allKindsCheckboxes ) {
		if ( checkbox.checked ) {
			actualKind.push(checkbox.value);
		}
	}
	return actualKind
}
// ----------> –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –≤–æ–∑—Ä–∞—Å—Ç
const findAge = (birthdate) => {
	const [day, month, year] = birthdate.split('.');
	const birthDateObj = new Date(`${year}-${month}-${day}`);
	const currentDate = new Date();
	const ageInMillis = currentDate - birthDateObj;
	const ageInYears = Math.floor(ageInMillis / (365.25 * 24 * 60 * 60 * 1000));
	return ageInYears
}
// ----------> –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∏ –≤—ã–≤–æ–¥–∏–º –∑–Ω–∞—á–µ–Ω–∏–µ
const addStatusToTable = (status) => {
	if ( status ) {
		return status;
	}
}
// ----------> –î–æ–±–∞–≤–ª—è–µ–º –≥–∞–ª–æ—á–∫—É, –µ—Å–ª–∏ –µ—Å—Ç—å —Ä–µ–∑—é–º–µ
const addResumeMarker = (data) => {
	if ( data === null ) {
		return ""
	} else {
		return "üìé"
	}
}
// ----------> –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –æ–±—å–µ–∫—Ç–æ–≤ –ø–æ –¥–∞—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è (–æ—Ç –Ω–æ–≤—ã—Ö –∫ —Å—Ç–∞—Ä—ã–º)
const comparisonOrdersByDate = (a, b) => {
	let dateA = new Date(a.create_at);
	let dateB = new Date(b.create_at);
	return dateB - dateA;
}
// ----------> –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –æ–±—å–µ–∫—Ç–æ–≤ –ø–æ –ø–æ–∑—Ä–∞—Å—Ç—É –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ ( –æ—Ç –º–µ–Ω—å—à–µ–≥–æ –∫ –±–æ–ª—å—à–µ–º—É )
const comparsionOrdersByOldAge = (a, b) => {
	let ageA = findAge(a.birthday);
	let ageB = findAge(b.birthday);
	return ageB - ageA;
}
// ----------> –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –æ–±—å–µ–∫—Ç–æ–≤ –ø–æ –ø–æ–∑—Ä–∞—Å—Ç—É –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ ( –æ—Ç –±–æ–ª—å—à–µ–≥–æ –∫ –º–µ–Ω—å—à–µ–º—É )
const comparsionOrdersByYoungAge = (a, b) => {
	let ageA = findAge(a.birthday);
	let ageB = findAge(b.birthday);
	return ageA - ageB;
}
// -------------------------------------------------------------------------- –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∞–∫—Ç–∏–≤–Ω–∞ –ª–∏ –∑–∞—è–≤–∫–∞ –∏ –≤–∫–ª—é—á–∞–µ–º –Ω—É–∂–Ω—ã–π –º–∞—Ä–∫–µ—Ä
const addCurrentActiveMarker = (order) => {
	if ( order.is_active === true ) {
		return "am-green"
	} else {
		return "am-red"
	}
}
// ------------------------------------------------------------------------ –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª–µ–π —Ñ–∏–ª—å—Ç—Ä–∞
// ----------> –°–æ–∑–¥–∞–µ–º –≥–∞–ª–æ—á–∫–∏ –≤—ã–±–æ—Ä–∞ —á–µ–∫–±–æ–∫—Å–æ–≤ –≤ —Ñ–∏–ª—å—Ç—Ä–µ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤
export async function addKindCheckboxesInApplicationsFilter(fetchVacanciesData) {
	return new Promise((resolve, reject) => {
		let allCheckboxes;
		fetchVacanciesData().then(render => {
			let vacancies = render.vacancies;
			let uniqueKinds = [];
			for ( let vacancy of vacancies ) {
				if ( uniqueKinds.indexOf(vacancy.kind) === -1 ) {
					uniqueKinds.push(vacancy.kind)
				}
			}
			const checkboxesContainer = document.querySelector(".kinds-app__checkboxes-container");
			for ( let kind of uniqueKinds ) {
				checkboxesContainer.insertAdjacentHTML("beforeend", 
					`
						<div class="kinds-app__checkbox-container">
							<input id="${kind}" type="checkbox" value="${kind}" class="kinds-app__checkbox-input">
							<label for="${kind}" class="kinds-app__checkbox-label">${kind.charAt(0).toUpperCase() + kind.slice(1)}</label>
						</div>
					`
				)
			}
			allCheckboxes = document.querySelectorAll(".kinds-app__checkbox-input");
			resolve(allCheckboxes);
		})
		.catch(error => {
			console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞:', error);
			reject(error);
		});
	})
}
// ----------> –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤–∞–∫–∞–Ω—Å–∏–∏ –≤ select —Å –≤–∞–∫–∞–Ω—Å–∏—è–º–∏
export const writeVacanciesInSelectList = (fetchVacanciesData) => {
	// –ñ–¥–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–º–∏—Å–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏–∏
	fetchVacanciesData().then(render => {
		let vacancies = render.vacancies;
		const vacanciesSelect = document.querySelector(".search-app__select");
		// –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –æ—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫
		vacanciesSelect.innerHTML = "";
		// –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —Å –≤—ã–±–æ—Ä–æ–º –≤—Å–µ—Ö –≤–∞–∫–∞–Ω—Å–∏–π
		vacanciesSelect.insertAdjacentHTML("beforeend", 
			`
				<option value="–í—Å—ñ –≤–∞–∫–∞–Ω—Å—ñ—ó –∑ –æ–±—Ä–∞–Ω–∏—Ö –Ω–∞–ø—Ä—è–º—ñ–≤" class="search-app__option">–í—Å—ñ –≤–∞–∫–∞–Ω—Å—ñ—ó –∑ –æ–±—Ä–∞–Ω–∏—Ö –Ω–∞–ø—Ä—è–º—ñ–≤</option>
			`
		)
		// –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω—ã –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è, —Ç–æ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏
		if ( getCheckedKinds().length !== 0 ) {
			for ( let vacancy of vacancies ) {
				for ( let kind of getCheckedKinds() ) {
					if ( vacancy.kind === kind ) {
						vacanciesSelect.insertAdjacentHTML("beforeend", 
							`
								<option value="${vacancy.title}" class="search-app__option">${vacancy.title}</option>
							`
						)
					}
				}
			}
		// –ï—Å–ª–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ –≤—ã–±—Ä–∞–Ω–æ, —Ç–æ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤—Å–µ –≤–∞–∫–∞–Ω—Å–∏–∏
		} else {
			for ( let vacancy of vacancies ) { 
				vacanciesSelect.insertAdjacentHTML("beforeend", 
					`
						<option value="${vacancy.title}" class="search-app__option">${vacancy.title}</option>
					`
				)
			}
		}
	}).catch(err => {
		console.error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≤–∞–∫–∞–Ω—Å–∏–∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É");
	});
}
// -------------------------------------------------------------------------- –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö ( –ø–æ—à–∞–≥–æ–≤–æ )
// ----------> –û—Ç–±–∏—Ä–∞–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ –¥–∞–Ω–Ω—ã–µ, —É –∫–æ—Ç–æ—Ä—ã—Ö –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –Ω—É–∂–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ, –æ—Ç–º–µ—á–µ–Ω–Ω–æ–µ –≤ —á–µ–∫–±–æ–∫—Å–µ
export const kindFilterOrders = (orders) => {
	// –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –º–∞—Å—Å–∏–≤ –∞–Ω–∫–µ—Ç—ã —Å –æ—Ç–º–µ—á–µ–Ω–Ω—ã–º–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏
	let resultOrdersArray = orders;
	if ( getCheckedKinds().length !== 0 ) {
		resultOrdersArray = [];
		for ( let order of orders ) {
			for ( let kind of getCheckedKinds() ) {
				if ( order.kind === kind ) {
					resultOrdersArray.push(order);
				}
			}
		}
	} else {}
	return resultOrdersArray;
}
// ----------> –§–∏–ª—å—Ç—Ä—É–µ–º –∑–∞—è–≤–∫–∏ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∏–∑ —Å–ø–∏—Å–∫–∞ –≤–∞–∫–∞–Ω—Å–∏–∏
export const vacancyFilterOrders = (orders) => {
	const selectElement = document.querySelector(".search-app__select")
	var selectedOption = selectElement.options[selectElement.selectedIndex];
	let selectedOptionText;
	if ( selectedOption ) {
		selectedOptionText = selectedOption.textContent;
	}
	let filterOrders = [];
	if ( selectedOptionText === "–í—Å—ñ –≤–∞–∫–∞–Ω—Å—ñ—ó –∑ –æ–±—Ä–∞–Ω–∏—Ö –Ω–∞–ø—Ä—è–º—ñ–≤" || selectedOptionText === undefined ) {
		filterOrders = orders;
	} else {
		for ( let order of orders ) {
			if ( order.title === selectedOptionText ) {
				filterOrders.push(order);
			}
		}
	}
	return filterOrders
}
// ----------> –§–∏–ª—å—Ç—Ä—É–µ–º –∑–∞—è–≤–∫–∏ 
export const searchFilterOrders = (orders) => {
	const searchInputValue = document.querySelector(".applications-filter__search-input").value
	let resultOrders = [];
	if ( searchInputValue.length === 0 ) {
		resultOrders = orders;
	} else {
		for ( let order of orders ) {
			let substr = searchInputValue;
			let string = `–Ü–º'—è: ${order.name}, –í–∞–∫–∞–Ω—Å—ñ—è: ${order.title}, –ú—ñ—Å—Ç–æ: ${order.city}, –¢–µ–ª–µ—Ñ–æ–Ω: ${order.feedback_phone}`;
			let index = string.toLowerCase().indexOf(substr.toLowerCase());
			if ( index !== -1 ) {
				resultOrders.push(order)
			} else {}
		}
	}
	return resultOrders;
}
// ----------> –°–æ—Ä—Ç–∏—Ä—É–µ–º –∑–∞—è–≤–∫–∏
export const sortOrders = (orders) => {
	const sortSelect = document.querySelector(".applications-filter__sort-select");
	const currentOption = sortSelect.options[sortSelect.selectedIndex];
	let resultOrders = orders;
	if ( currentOption.value === "new" ) {
		resultOrders = resultOrders.sort(comparisonOrdersByDate)
	} else if ( currentOption.value === "old" ) {
		resultOrders = resultOrders.sort(comparsionOrdersByOldAge)
	} else if ( currentOption.value === "young" ) {
		resultOrders = resultOrders.sort(comparsionOrdersByYoungAge)
	}
return resultOrders
}
// -------------------------------------------------------------------------- –§—É–Ω–∫—Ü–∏–∏ —Ä–∞–∑–±–∏–≤–∫–∏ –∏ —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
// ----------> –†–∞–∑–±–∏–≤–∞–µ–º –∑–∞—è–≤–∫–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
export const divideOrdersToPages = (orders) => {
	let ordersOnPage = 50; // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞—è–≤–æ–∫ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
	let pagesCounter = Math.floor(orders.length/ordersOnPage) + 1;
	createPaginatePages(pagesCounter);
	const result = {orders, ordersOnPage};
	return result
}
// ----------> –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞—è–≤–æ–∫
const createPaginatePages = (pagesCounter) => {
	const paginationContainer = document.querySelector(".pagination-applications");
	paginationContainer.innerHTML = "";
	if ( pagesCounter > 1 ) {
		// paginationContainer.insertAdjacentHTML("beforeend", 
		// 	`
		// 		<button class="pagination__left pagination-button">
		// 			‚Üê
		// 		</button>
				
		// 	`
		// )
		paginationContainer.insertAdjacentHTML("beforeend", 
		`
			<div class="pagination__pages"></div>
		`)
		let paginationPagesContainer = document.querySelector(".pagination__pages");
		for ( let i = 1; i <= pagesCounter; i++ ) {
			paginationPagesContainer.insertAdjacentHTML("beforeend", 
			`
				<button page-number-button="${i}" class="pagination__page pagination-button">${i}</button>
			`)
		}
		// paginationContainer.insertAdjacentHTML("beforeend", 
		// 	`
		// 		<button class="pagination__right pagination-button">
		// 			‚Üí
		// 		</button>
		// 	`
		// )
	}
}
// -------------------------------------------------------------------------- –ó–∞–≥—Ä—É–∂–∞–µ–º –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –≤—Å–µ –∑–∞—è–≤–∫–∏ –∏ –∑–∞–¥–∞–µ–º –∏–º –Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã
export const addOrdersToTable = (orders, ordersOnPage) => {
	const tableContainer = document.querySelector(".applications__table-result-container");
	tableContainer.innerHTML = "";
	tableContainer.insertAdjacentHTML("beforeend", 
		`
		<ul class="applications__table-title">
			<li class="applications__table-title-item">–°—Ç–≤–æ—Ä–µ–Ω–Ω—è</li>
			<li class="applications__table-title-item">–ü.–Ü.–ë.</li>
			<li class="applications__table-title-item">–í—ñ–∫</li>
			<li class="applications__table-title-item">–ú—ñ—Å—Ç–æ</li>
			<li class="applications__table-title-item">–ö–æ–Ω—Ç–∞–∫—Ç–∏</li>
			<li class="applications__table-title-item">–ù–∞–ø—Ä—è–º–æ–∫</li>
			<li class="applications__table-title-item">–í–∞–∫–∞–Ω—Å—ñ—è</li>
			<li class="applications__table-title-item">–°—Ç–∞—Ç—É—Å</li>
			<li class="applications__table-title-item">üìé</li>
			<li class="applications__table-title-item">üîó</li>
		</ul>
		`
	)
	let ordersOnPageCounter = 0; // –°—á–∏—Ç–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞—è–≤–æ–∫, –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
	let pagesCounterValue = 1; // –°—á–∏—Ç–∞–µ—Ç –∫–æ–ª-–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü –∏ –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–Ω–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤ —Å—Ç—Ä–æ–∫—É –∑–∞—è–≤–∫–∏
	for ( let order of orders ) {
		if ( ordersOnPageCounter < ordersOnPage ) {

			// –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç –∑–∞—è–≤–∫–∏ –≤ —Å–ø–∏—Å–∫–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞
			let orderColorClass = "new-order-status";
			if ( order.status === "–ù–æ–≤–∏–π" ) {
				orderColorClass = "new-order-status";
			} else if ( order.status === "–ü–æ–≥–æ–¥–∂–µ–Ω–æ —Ä–µ–∫—Ä—É—Ç–∏–Ω–≥–æ–º" || order.status === "–ü–æ—Ç—Ä–µ–±—É—î –¥–æ–¥–∞—Ç–∫–æ–≤–æ–≥–æ —Ä–æ–∑–≥–ª—è–¥—É" || order.status === "–ó–∞–ø—Ä–æ—à–µ–Ω–æ –Ω–∞ —Å–ø—ñ–≤–±–µ—Å—ñ–¥—É" ) {
				orderColorClass = "process-order-status";
			} else if ( order.status === "–í—ñ–¥—Ö–∏–ª–µ–Ω–æ —Ä–µ–∫—Ä—É—Ç–∏–Ω–≥–æ–º" || order.status === "–í—ñ–¥—Ö–∏–ª–µ–Ω–æ –∫–µ—Ä—ñ–≤–Ω–∏–∫–æ–º –≤ –∑–∞–¥–∞—á—ñ" || 
									order.status === "–í—ñ–¥–º–æ–≤–∞ –∫–µ—Ä—ñ–≤–Ω–∏–∫–∞ –ø—ñ—Å–ª—è —Å–ø—ñ–≤–±–µ—Å—ñ–¥–∏" || order.status === "–í—ñ–¥–º–æ–≤–∞ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞" || 
									order.status === "–í—ñ–¥–º–æ–≤–∞ –ø—ñ—Å–ª—è —Ä–æ–∑–≥–ª—è–¥—É –∑–∞—è–≤–∫–∏ —Ä–µ–∫—Ä—É—Ç–µ—Ä–æ–º" || order.status === "–í—ñ–¥–º–æ–≤–∞ –ø—ñ—Å–ª—è —Å–ø—ñ–≤–±–µ—Å—ñ–¥–∏" ) {
				orderColorClass = "failed-order-status";
			} else if ( order.status === "–ü—Ä–∏–π–Ω—è–≤ offer" || order.status === "–†–µ–∑–µ—Ä–≤" || 
									order.status === "–ó–∞–ø—Ä–æ—à–µ–Ω–æ –Ω–∞ –ø—Ä–∞—Ü–µ–≤–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è" || order.status === "–ó–∞–≤–µ—Ä—à–µ–Ω–∏–π" ) {
				orderColorClass = "success-order-status";
			}


			tableContainer.insertAdjacentHTML("beforeend", 
				`
					<ul page-number="${pagesCounterValue}" class="applications__row">
						<li class="applications__item applications-create-at-item"><div class="applications-active-marker ${addCurrentActiveMarker(order)}"></div><div>${order.create_at}</div></li>
						<li class="applications__item">${order.name}</li>
						<li class="applications__item">${findAge(order.birthday)}</li>
						<li class="applications__item">${order.city}</li>
						<li class="applications__item">${order.feedback_phone}</li>
						<li class="applications__item">${order.kind}</li>
						<li class="applications__item">${order.title}</li>
						<li class="applications__item applications-item-current-status ${orderColorClass}">${addStatusToTable(order.status)}</li>
						<li class="applications__item">${addResumeMarker(order.file_name)}</li>
						<li template-button="order" order-id="${order._id}" user-telegram-id="${order.telegram_id}" class="applications__item template-switch-button user-application-button">üîó</li>
					</ul>
				`
			)
			ordersOnPageCounter++;
		}
		else if ( ordersOnPageCounter === ordersOnPage ) {
			pagesCounterValue++;
			ordersOnPageCounter = 0;
		}
	}
	const result = { orders, ordersOnPage }
	return result
}
// -------------------------------------------------------------------------- –ü—Ä–æ—Ö–æ–¥–∏–º—Å—è –ø–æ –∫–Ω–æ–ø–∫–∞–º –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –∏ –≤–µ—à–∞–µ–º –∞ –Ω–∏—Ö —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª
export const addListenersToPaginationButtons = (orders, ordersOnPage) => {
	const allPaginationButtons = document.querySelectorAll(".pagination-button");
	let currentPage = 1;
	for ( let button of allPaginationButtons ) {
		button.addEventListener("click", (e) => {
			currentPage = e.target.getAttribute("page-number-button")
			showCurrentPageOrders( orders, currentPage, ordersOnPage );
		})
	}
	const result = { orders, currentPage, ordersOnPage }
	return result
}
// ----------> –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Å–ª—É—à–∏–≤–∞—Ç–µ–ª—å, —Å—á–∏—Ç—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é –∫–Ω–æ–ø–∫—É –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞—è–≤–∫–∏, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —ç—Ç–æ–π –∫–Ω–æ–ø–∫–µ
export const showCurrentPageOrders = ( orders, currentPage, ordersOnPage ) => {
	const allOrderRows = document.querySelectorAll(".applications__row");
	for ( let row of allOrderRows ) {
		if ( +row.getAttribute("page-number") === +currentPage ) {
			row.classList.remove("_hidden");
			row.classList.add("display-grid");
		} else {
			row.classList.remove("display-grid");
			row.classList.add("_hidden");
		}
	}
	return true
}
// -------------------------------------------------------------------------- –ì–ª–∞–∑–∞ –≤ —Å—Ç—Ä–æ–∫–µ –ø–æ–∏—Å–∫–∞
export const showOrHiddenEyes = () => {
	if ( document.querySelector(".applications-filter__search-input").value.length > 0 ) {
		document.querySelector(".search__input-eyes").classList.remove("_hidden");
	} else {
		document.querySelector(".search__input-eyes").classList.add("_hidden");
	}
}
// -------------------------------------------------------------------------- –°–±—Ä–æ—Å –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ñ–∏–ª—å—Ç—Ä–∞, –ø–æ–∏—Å–∫–∞ –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
export const clearOrdersFilter = () => {
	// –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
	const sortSelect = document.querySelector(".applications-filter__sort-select");
	sortSelect.selectedIndex = 0;

	// –û–±–Ω—É–ª—è–µ–º –ø–æ–ª–µ –ø–æ–∏—Å–∫–∞
	const searchField = document.querySelector(".applications-filter__search-input");
	searchField.value = "";
	searchField.textContent = "";
	showOrHiddenEyes();

	// –û–±–Ω—É–ª—è–µ–º —á–µ–∫–±–æ–∫—Å—ã –≤—ã–±–æ—Ä–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
	const allCheckboxes = document.querySelectorAll(".kinds-app__checkbox-container");
	for ( let checkbox of allCheckboxes ) {
		checkbox.firstElementChild.checked = false;
	}

	// –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å –≤–∞–∫–∞–Ω—Å–∏—è–º–∏
	const vacancySelect = document.querySelector(".search-app__select");
	vacancySelect.selectedIndex = 0;
}